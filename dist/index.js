/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(17)
	var __weex_style__ = __webpack_require__(18)
	var __weex_script__ = __webpack_require__(19)
	
	__weex_define__('@weex-component/2db5b02b2b2467ace4cdd68021452568', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})
	
	__weex_bootstrap__('@weex-component/2db5b02b2b2467ace4cdd68021452568',undefined,undefined)

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(2)
	var __weex_style__ = __webpack_require__(3)
	var __weex_script__ = __webpack_require__(4)
	
	__weex_define__('@weex-component/unit', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})


/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "unit-box"
	  ],
	  "children": [
	    {
	      "type": "text",
	      "classList": [
	        "unit-number"
	      ],
	      "style": {
	        "fontSize": function () {return this.numberSize}
	      },
	      "attr": {
	        "value": function () {return this.number}
	      }
	    },
	    {
	      "type": "text",
	      "classList": [
	        "unit-text"
	      ],
	      "attr": {
	        "value": function () {return this.label}
	      }
	    }
	  ]
	}

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = {
	  "unit-box": {
	    "flexDirection": "row",
	    "justifyContent": "center",
	    "alignItems": "flex-end"
	  },
	  "unit-number": {
	    "display": "inline-block",
	    "fontSize": 50,
	    "color": "#111111"
	  },
	  "unit-text": {
	    "fontSize": 22,
	    "color": "#333333",
	    "paddingLeft": 20,
	    "justifyContent": "flex-end",
	    "alignItems": "flex-end"
	  }
	}

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = function(module, exports, __weex_require__){"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {};}
	/* generated by weex-loader */


/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "list"
	  ],
	  "children": [
	    {
	      "type": "div",
	      "classList": [
	        "item"
	      ],
	      "repeat": {
	        "expression": function () {return this.data},
	        "value": "item"
	      },
	      "children": [
	        {
	          "type": "div",
	          "classList": [
	            "item-distance"
	          ],
	          "children": [
	            {
	              "type": "unit",
	              "attr": {
	                "number": function () {return this.item.distance},
	                "label": "千米"
	              }
	            }
	          ]
	        },
	        {
	          "type": "div",
	          "classList": [
	            "item-time-info"
	          ],
	          "children": [
	            {
	              "type": "unit",
	              "style": {
	                "flex": 1
	              },
	              "attr": {
	                "numberSize": "24",
	                "number": function () {return this.item.time},
	                "label": "分钟"
	              }
	            },
	            {
	              "type": "unit",
	              "style": {
	                "flex": 1
	              },
	              "attr": {
	                "numberSize": "24",
	                "number": function () {return this.item.date},
	                "label": ""
	              }
	            }
	          ]
	        }
	      ]
	    }
	  ]
	}

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = {
	  "item": {
	    "padding": 20,
	    "borderTopWidth": 1,
	    "borderTopColor": "#cccccc",
	    "flexDirection": "row"
	  },
	  "item-distance": {
	    "flex": 1,
	    "justifyContent": "flex-start",
	    "alignItems": "flex-start"
	  },
	  "item-time-info": {
	    "flex": 1,
	    "flexDirection": "row",
	    "justifyContent": "flex-end",
	    "alignItems": "flex-end"
	  }
	}

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	__webpack_require__(1);
	exports.default = {};}
	/* generated by weex-loader */


/***/ },
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "navbar-con"
	  ],
	  "children": [
	    {
	      "type": "div",
	      "classList": [
	        "navbar"
	      ],
	      "children": [
	        {
	          "type": "div",
	          "classList": [
	            "btn-back"
	          ],
	          "shown": function () {return !this.hideReturn},
	          "events": {
	            "click": "goHome"
	          },
	          "children": [
	            {
	              "type": "image",
	              "classList": [
	                "btn-arrow-left"
	              ],
	              "attr": {
	                "src": "http://img1.vued.vanthink.cn/vued9c8e7e738ff94abee23eb69d7f1401e9.png"
	              }
	            },
	            {
	              "type": "text",
	              "classList": [
	                "btn-text"
	              ],
	              "attr": {
	                "value": "返回"
	              }
	            }
	          ]
	        },
	        {
	          "type": "text",
	          "classList": [
	            "title"
	          ],
	          "attr": {
	            "value": function () {return this.title}
	          }
	        }
	      ]
	    }
	  ]
	}

/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = {
	  "navbar-con": {
	    "height": 108,
	    "paddingTop": 20
	  },
	  "navbar": {
	    "zIndex": 1000,
	    "position": "relative",
	    "display": "flex",
	    "flexDirection": "row",
	    "height": 88,
	    "backgroundColor": "#ffffff",
	    "alignItems": "center",
	    "borderBottomWidth": 2,
	    "borderBottomColor": "#dddddd"
	  },
	  "btn-back": {
	    "zIndex": 1002,
	    "flexDirection": "row",
	    "alignItems": "center",
	    "width": 180,
	    "height": 88
	  },
	  "btn-arrow-left": {
	    "width": 60,
	    "height": 60,
	    "marginLeft": 10
	  },
	  "btn-text": {
	    "color": "#0f89f5"
	  },
	  "title": {
	    "position": "absolute",
	    "left": 180,
	    "right": 180,
	    "top": 0,
	    "height": 88,
	    "lineHeight": 88,
	    "fontSize": 36,
	    "textAlign": "center"
	  }
	}

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	var navigator = __weex_require__('@weex-module/navigator');
	module.exports = {
	  methods: {
	    goHome: function goHome() {
	      navigator.pop();
	    }
	  }
	};}
	/* generated by weex-loader */


/***/ },
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "container"
	  ],
	  "children": [
	    {
	      "type": "navbar",
	      "attr": {
	        "hideReturn": "true",
	        "title": "weex-sports"
	      }
	    },
	    {
	      "type": "text",
	      "classList": [
	        "title"
	      ],
	      "attr": {
	        "value": "我的运动"
	      }
	    },
	    {
	      "type": "div",
	      "classList": [
	        "data-container"
	      ],
	      "children": [
	        {
	          "type": "div",
	          "classList": [
	            "data-circle"
	          ],
	          "children": [
	            {
	              "type": "weex-percentage-circle",
	              "attr": {
	                "borderWidth": "8",
	                "color": "#e74c3c",
	                "percent": "60",
	                "radius": "150"
	              }
	            },
	            {
	              "type": "div",
	              "classList": [
	                "btn-go"
	              ],
	              "events": {
	                "click": "go"
	              },
	              "children": [
	                {
	                  "type": "text",
	                  "classList": [
	                    "btn-go-text"
	                  ],
	                  "attr": {
	                    "value": "开始跑步"
	                  }
	                }
	              ]
	            }
	          ]
	        },
	        {
	          "type": "div",
	          "classList": [
	            "data-dashboard"
	          ],
	          "children": [
	            {
	              "type": "div",
	              "classList": [
	                "data-dashboard-item"
	              ],
	              "children": [
	                {
	                  "type": "text",
	                  "classList": [
	                    "data-dashboard-label"
	                  ],
	                  "attr": {
	                    "value": "距离"
	                  }
	                },
	                {
	                  "type": "unit",
	                  "attr": {
	                    "number": function () {return this.total.distance},
	                    "label": "公里"
	                  }
	                }
	              ]
	            },
	            {
	              "type": "div",
	              "classList": [
	                "data-dashboard-item"
	              ],
	              "children": [
	                {
	                  "type": "text",
	                  "classList": [
	                    "data-dashboard-label"
	                  ],
	                  "attr": {
	                    "value": "热量"
	                  }
	                },
	                {
	                  "type": "unit",
	                  "attr": {
	                    "number": function () {return this.total.calories},
	                    "label": "卡路里"
	                  }
	                }
	              ]
	            },
	            {
	              "type": "div",
	              "classList": [
	                "data-dashboard-item"
	              ],
	              "children": [
	                {
	                  "type": "text",
	                  "classList": [
	                    "data-dashboard-label"
	                  ],
	                  "attr": {
	                    "value": "时间"
	                  }
	                },
	                {
	                  "type": "unit",
	                  "attr": {
	                    "number": function () {return this.total.time},
	                    "label": "分钟"
	                  }
	                }
	              ]
	            }
	          ]
	        }
	      ]
	    },
	    {
	      "type": "div",
	      "classList": [
	        "history-center"
	      ],
	      "children": [
	        {
	          "type": "text",
	          "attr": {
	            "value": "历史记录"
	          }
	        },
	        {
	          "type": "list",
	          "attr": {
	            "data": function () {return this.historyData}
	          }
	        }
	      ]
	    },
	    {
	      "type": "text",
	      "classList": [
	        "footer"
	      ],
	      "attr": {
	        "value": "Powered By Weex"
	      }
	    }
	  ]
	}

/***/ },
/* 18 */
/***/ function(module, exports) {

	module.exports = {
	  "container": {
	    "position": "relative",
	    "flex": 1,
	    "minHeight": 800,
	    "backgroundColor": "#eeeeee"
	  },
	  "title": {
	    "fontSize": 45,
	    "padding": 20,
	    "justifyContent": "center",
	    "alignItems": "center",
	    "color": "#e74c3c",
	    "backgroundColor": "#ffffff"
	  },
	  "data-container": {
	    "padding": 20,
	    "borderBottomColor": "#dddddd",
	    "borderBottomWidth": 2,
	    "backgroundColor": "#ffffff",
	    "justifyContent": "center"
	  },
	  "data-circle": {
	    "alignItems": "center"
	  },
	  "btn-go": {
	    "width": 400,
	    "padding": 20,
	    "marginTop": 60,
	    "backgroundImage": "linear-gradient(to left, #FF4E50 , #F9D423)",
	    "borderWidth": 4,
	    "borderColor": "#ffffff",
	    "borderRadius": 10,
	    "alignItems": "center"
	  },
	  "btn-go-text": {
	    "color": "#ffffff"
	  },
	  "data-dashboard": {
	    "borderTopColor": "#dddddd",
	    "borderTopWidth": 2,
	    "marginTop": 20,
	    "flexDirection": "row"
	  },
	  "data-dashboard-item": {
	    "flex": 1,
	    "alignItems": "center"
	  },
	  "data-dashboard-label": {
	    "fontSize": 24,
	    "color": "#999999",
	    "paddingTop": 20
	  },
	  "history-center": {
	    "padding": 20,
	    "marginTop": 40,
	    "marginBottom": 20,
	    "backgroundColor": "#ffffff",
	    "borderBottomColor": "#dddddd",
	    "borderBottomWidth": 2
	  },
	  "footer": {
	    "fontSize": 16,
	    "color": "#999999",
	    "padding": 20,
	    "alignItems": "center"
	  }
	}

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	__webpack_require__(20);
	__webpack_require__(24);
	__webpack_require__(1);
	__webpack_require__(25);
	var utils = __webpack_require__(26);
	var navigator = __weex_require__('@weex-module/navigator');
	
	module.exports = {
	  data: function () {return {
	    total: {
	      distance: 7.02,
	      calories: 182,
	      time: 120
	    },
	    plan: {
	      distance: 15.8
	    },
	    historyData: [{
	      distance: 12,
	      time: 30.2,
	      date: '2017-03-15'
	    }, {
	      distance: 12,
	      time: 30.2,
	      date: '2017-03-15'
	    }]
	
	  }},
	
	  methods: {
	    go: function go() {
	      var url = this.$getConfig().bundleUrl;
	      navigator.push({
	        url: utils.setBundleUrl(url, 'running.js')
	      });
	    }
	  }
	};}
	/* generated by weex-loader */


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(21)
	var __weex_style__ = __webpack_require__(22)
	var __weex_script__ = __webpack_require__(23)
	
	__weex_define__('@weex-component/weex-percentage-circle', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})


/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "circle"
	  ],
	  "style": {
	    "width": function () {return this.radius*2},
	    "height": function () {return this.radius*2},
	    "borderRadius": function () {return this.radius}
	  },
	  "children": [
	    {
	      "type": "div",
	      "classList": [
	        "left-wrap"
	      ],
	      "style": {
	        "width": function () {return this.radius},
	        "height": function () {return this.radius*2},
	        "left": 0
	      },
	      "children": [
	        {
	          "type": "div",
	          "classList": [
	            "loader"
	          ],
	          "id": "id1",
	          "style": {
	            "left": function () {return this.radius},
	            "width": function () {return this.radius},
	            "height": function () {return this.radius*2},
	            "borderTopLeftRadius": 0,
	            "borderBottomLeftRadius": 0,
	            "backgroundColor": function () {return this.color}
	          }
	        }
	      ]
	    },
	    {
	      "type": "div",
	      "classList": [
	        "right-wrap"
	      ],
	      "style": {
	        "width": function () {return this.radius},
	        "height": function () {return this.radius*2},
	        "left": function () {return this.radius}
	      },
	      "children": [
	        {
	          "type": "div",
	          "classList": [
	            "loader"
	          ],
	          "id": "id2",
	          "style": {
	            "left": function () {return -this.radius},
	            "width": function () {return this.radius},
	            "height": function () {return this.radius*2},
	            "borderTopRightRadius": 0,
	            "borderBottomRightRadius": 0,
	            "backgroundColor": function () {return this.color}
	          }
	        }
	      ]
	    },
	    {
	      "type": "div",
	      "classList": [
	        "inner-circle"
	      ],
	      "style": {
	        "width": function () {return (this.radius-this.borderWidth)*2},
	        "height": function () {return (this.radius-this.borderWidth)*2},
	        "borderRadius": function () {return this.radius-this.borderWidth},
	        "backgroundColor": "#ffffff"
	      },
	      "children": [
	        {
	          "type": "text",
	          "style": {
	            "color": function () {return this.textColor}
	          },
	          "attr": {
	            "value": function () {return (this.percent) + '%'}
	          }
	        }
	      ]
	    }
	  ]
	}

/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = {
	  "circle": {
	    "overflow": "hidden",
	    "position": "relative",
	    "justifyContent": "center",
	    "alignItems": "center",
	    "backgroundColor": "#e3e3e3"
	  },
	  "left-wrap": {
	    "overflow": "hidden",
	    "position": "absolute",
	    "top": 0
	  },
	  "right-wrap": {
	    "overflow": "hidden",
	    "position": "absolute",
	    "top": 0
	  },
	  "loader": {
	    "position": "absolute",
	    "left": 0,
	    "top": 0,
	    "borderRadius": 1000
	  },
	  "loader2": {
	    "position": "absolute",
	    "left": 0,
	    "top": 0,
	    "borderRadius": 1000
	  },
	  "inner-circle": {
	    "position": "relative",
	    "justifyContent": "center",
	    "alignItems": "center"
	  },
	  "text": {
	    "fontSize": 11,
	    "color": "#888888"
	  }
	}

/***/ },
/* 23 */
/***/ function(module, exports) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var animation = __weex_require__('@weex-module/animation');
	exports.default = {
	  data: function data() {
	    return {
	      radius: 100,
	      color: '#1ba1e2',
	
	      borderWidth: 2,
	      percent: 0,
	      textColor: '#000'
	    };
	  },
	
	
	  methods: {
	    anim: function anim(targte, styles, timingFunction, duration, callback) {
	
	      var el = this.$el(targte);
	      animation.transition(el, {
	        styles: styles,
	        timingFunction: timingFunction,
	        duration: duration
	      }, callback);
	    }
	
	  },
	  ready: function ready() {
	    var leftTransformerDegree = '0deg';
	    var rightTransformerDegree = '0deg';
	    if (this.percent >= 50) {
	      rightTransformerDegree = '180deg';
	      leftTransformerDegree = (this.percent - 50) * 3.6 + 'deg';
	    } else {
	      rightTransformerDegree = this.percent * 3.6 + 'deg';
	    }
	
	    var self = this;
	    self.anim('id1', {
	      transform: 'rotate(' + leftTransformerDegree + ')',
	      transformOrigin: '0 50%'
	    }, 'ease-in-out', 500, function () {});
	    self.anim('id2', {
	      transform: 'rotate(' + rightTransformerDegree + ')',
	      transformOrigin: '100% 50%'
	    }, 'ease-in-out', 500, function () {});
	    if (this.borderWidth <= 2) {
	      this.borderWidth = 2;
	    }
	  }
	};}
	/* generated by weex-loader */


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(11)
	var __weex_style__ = __webpack_require__(12)
	var __weex_script__ = __webpack_require__(13)
	
	__weex_define__('@weex-component/navbar', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1)
	var __weex_template__ = __webpack_require__(5)
	var __weex_style__ = __webpack_require__(6)
	var __weex_script__ = __webpack_require__(7)
	
	__weex_define__('@weex-component/list', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})


/***/ },
/* 26 */
/***/ function(module, exports) {

	module.exports = {
	  setTimeFormat(time) {
	    const h = this.setZero(Math.floor(time / 3600));
	    const i = this.setZero(Math.floor((time % 3600) / 60));
	    const s = this.setZero(time % 60);
	    return h + ':' + i + ':' + s;
	  },
	  setZero(number) {
	    return number < 10 ? '0' + number : number;
	  },
	  calcSpeed(distance, time) {
	    return ((distance / time) * 3.6).toFixed(2);
	  },
	  setBundleUrl(url, jsFile) {
	    const bundleUrl = url;
	    let host = '';
	    let path = '';
	    let nativeBase;
	    const isAndroidAssets = bundleUrl.indexOf('your_current_IP') >= 0 || bundleUrl.indexOf('file://assets/') >= 0;
	    const isiOSAssets = bundleUrl.indexOf('file:///') >= 0 && bundleUrl.indexOf('WeexDemo.app') > 0;
	    if (isAndroidAssets) {
	      nativeBase = 'file://assets/';
	    } else if (isiOSAssets) {
	      // file:///var/mobile/Containers/Bundle/Application/{id}/WeexDemo.app/
	      // file:///Users/{user}/Library/Developer/CoreSimulator/Devices/{id}/data/Containers/Bundle/Application/{id}/WeexDemo.app/
	      nativeBase = bundleUrl.substring(0, bundleUrl.lastIndexOf('/') + 1);
	    } else {
	      const matches = /\/\/([^\/]+?)\//.exec(bundleUrl);
	      const matchFirstPath = /\/\/.+\/([^\/]+?)\//.exec(bundleUrl);
	      if (matches && matches.length >= 2) {
	        host = matches[1];
	      }
	      if (matchFirstPath && matchFirstPath.length >= 2) {
	        path = matchFirstPath[1];
	      }
	      nativeBase = 'http://' + host + '/';
	    }
	    const h5Base = './index.html?page=';
	    // in Native
	    let base = nativeBase;
	    if (typeof navigator !== 'undefined' && (navigator.appCodeName === 'Mozilla' || navigator.product === 'Gecko')) {
	      // check if in weexpack project
	      if (path === 'web' || path === 'dist') {
	        base = h5Base + '/dist/';
	      } else {
	        base = h5Base + '';
	      }
	    } else {
	      base = nativeBase + path + '/';
	    }
	
	    const newUrl = base + jsFile;
	    return newUrl;
	  }
	};


/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,