<template>
  <div class="container">
    <navbar hide-return="true" title="weex-sports"></navbar>
    <text class="title">我的运动</text>
    <div class="data-container">
      <div class="data-circle">
        <weex-percentage-circle border-width="8" color="#e74c3c" percent="70" radius="150">
        </weex-percentage-circle>
        <div class="btn-go" onclick="go">
          <text class="btn-go-text">开始跑步</text>
        </div>
      </div>
      <div class="data-dashboard">
        <div class="data-dashboard-item">
          <text class="data-dashboard-label">距离</text>
          <unit number="{{total.distance}}" label="公里"></unit>
        </div>
        <div class="data-dashboard-item">
          <text class="data-dashboard-label">热量</text>
          <unit number="{{total.calories}}" label="卡路里"></unit>
        </div>
        <div class="data-dashboard-item">
          <text class="data-dashboard-label">时间</text>
          <unit number="{{total.time}}" label="分钟"></unit>
        </div>
      </div>
    </div>
    <div class="history-center">
      <text>历史记录</text>
      <div class="list">
        <div class="item" repeat="item in historyData">
          <div class="item-distance">
            <unit number="{{item.distance}}" label="千米"></unit>
          </div>
          <div class="item-time-info">
            <unit style="flex:1;" number-size="24" number="{{item.time}}" label=""></unit>
            <unit style="flex:1" number-size="24" number="{{item.date}}" label=""></unit>
          </div>
        </div>    
      </div>
    </div>
    
    <text class="footer">Powered By Weex</text>
  </div>
</template>

<style>
  .container{
    position: relative;
    flex: 1;
    min-height: 800;
    background-color: #eee;
  }
  .title {
    font-size: 45;
    padding: 20;
    justify-content: center;
    align-items: center;
    color: #e74c3c;
    background-color: #fff;
  }
  .data-container{
    padding: 20;
    border-bottom-color: #ddd;
    border-bottom-width: 2;
    background-color: #fff;
    justify-content: center;
  }
  
  .data-circle{
    align-items: center;
  }
  .btn-go{
    width: 400;
    padding: 20;
    margin-top: 60;
    background-image: linear-gradient(to left, #FF4E50 , #F9D423); 
    border-width: 4;
    border-color: #ffffff;
    border-radius: 40;
    align-items: center;
    border-radius: 10;
  }
  .btn-go-text{
    color: #ffffff;
  }
  .data-dashboard{
    border-top-color: #ddd;
    border-top-width: 2;
    margin-top: 20;
    flex-direction: row;
  }
  .data-dashboard-item{
    flex:1;
    align-items: center;
  }
  .data-dashboard-label{
    font-size: 24;
    color: #999;
    padding-top: 20;
    padding-top: 20;
  }
  
  .history-center{
    padding: 20;
    margin-top: 40;
    margin-bottom: 20;
    background-color: #fff;
    border-bottom-color: #ddd;
    border-bottom-width: 2;
  }
  .item{
    padding: 20;
    border-top-width: 1;
    border-top-color: #ccc;
    flex-direction: row;
  }
  .item-distance{
    flex:1;
    justify-content: flex-start;
    align-items: flex-start;
  }
  .item-time-info{
    flex: 1;
    flex-direction: row;
    justify-content: flex-end;
    align-items: flex-end;
  }
  
  
  .footer{
    font-size: 16;
    color: #999;
    padding: 20;
    align-items: center;
  }
  
</style>

<script>
  require('weex-percentage-circle')
  require('./include/navbar.we');
  require('./include/unit.we');
  require('./include/list.we');
  const utils = require('./lib/utils');
  const navigator = require('@weex-module/navigator');
  const storage = require('@weex-module/storage');

  module.exports = {
    data: {
      total: {
        distance: 0,
        calories: 0,
        time: 0,
      },
      plan: {
        distance: 30
      },
      historyData: []
      
    },
    
    methods: {
      go() {
        const url = this.$getConfig().bundleUrl;
        navigator.push({
          url: utils.setBundleUrl(url, 'running.js') ,
        })
      },
      
    },
    
    created() {
      const self = this;
      console.log(self);
      storage.getItem('runningData', function (res) {
        if (res.result == 'success') {
          try {
            let data = JSON.parse(res.data);
            self.historyData = data;
            self.total.distance = utils.calcTotal(data, 'miles');
            self.total.calories = utils.calcTotal(data, 'calories');
            self.total.time = utils.setTimeFormat(utils.calcTotal(data, 'seconds'));
            
          } catch (e) {
            console.log('parse error ');  
          }
        } 
        
      });
    }
  }
</script>
